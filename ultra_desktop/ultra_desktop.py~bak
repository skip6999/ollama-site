import tkinter as tk
from tkinter import scrolledtext, messagebox
import requests
import json

OLLAMA_URL = "http://localhost:18181/api/generate"
OLLAMA_INFO_URL = "http://localhost:18181/api/show"

# --- Core function ---
def send_prompt():
    prompt = input_box.get("1.0", tk.END).strip()
    if not prompt:
        return
    try:
        response = requests.post(OLLAMA_URL, json={"model": "mistral", "prompt": prompt}, stream=True)
        if response.status_code != 200:
            chat_output.insert(tk.END, f"[Error]: Server returned status {response.status_code}\n\n")
            return

        chat_output.insert(tk.END, f"You: {prompt}\nMistral: ")
        for line in response.iter_lines():
            if line:
                try:
                    data = json.loads(line.decode('utf-8'))
                    token = data.get("response")
                    if token:
                        chat_output.insert(tk.END, token)
                        chat_output.see(tk.END)
                except json.JSONDecodeError:
                    continue

        chat_output.insert(tk.END, "\n\n")
        input_box.delete("1.0", tk.END)

    except requests.exceptions.RequestException as e:
        chat_output.insert(tk.END, f"[Connection Error]: {e}\n\n")

# --- Model Info function ---
def show_model_info():
    try:
        response = requests.post(OLLAMA_INFO_URL, json={"model": "mistral"})
        data = response.json()
        info = f"Model: {data.get('model')}\nFormat: {data.get('format')}\nParameters: {data.get('parameters')}\n" \
               f"System Prompt: {data.get('system', '[none]')}"
        messagebox.showinfo("Model Info", info)
    except Exception as e:
        messagebox.showerror("Error", f"Could not fetch model info:\n{e}")

# --- Clear Chat ---
def clear_chat():
    chat_output.delete("1.0", tk.END)

# --- GUI Setup ---
root = tk.Tk()
root.title("Ultra Baby")
root.geometry("600x550")
root.configure(bg="black")

chat_output = scrolledtext.ScrolledText(root, wrap=tk.WORD, bg="black", fg="lime", insertbackground="lime", font=("Courier", 16))
chat_output.pack(padx=10, pady=10, fill=tk.BOTH, expand=True)

input_box = tk.Text(root, height=4, bg="black", fg="lime", insertbackground="lime", font=("Courier", 16))
input_box.pack(padx=10, pady=(0,5), fill=tk.X)

button_frame = tk.Frame(root, bg="black")
button_frame.pack(pady=(0,10))

send_button = tk.Button(button_frame, text="Send", command=send_prompt, bg="black", fg="lime", activebackground="lime", activeforeground="black", font=("Courier", 12))
send_button.pack(side=tk.LEFT, padx=5)

info_button = tk.Button(button_frame, text="Model Info", command=show_model_info, bg="black", fg="lime", activebackground="lime", activeforeground="black", font=("Courier", 12))
info_button.pack(side=tk.LEFT, padx=5)

clear_button = tk.Button(button_frame, text="Clear Chat", command=clear_chat, bg="black", fg="lime", activebackground="lime", activeforeground="black", font=("Courier", 12))
clear_button.pack(side=tk.LEFT, padx=5)

# Bind Enter key
input_box.bind("<Return>", lambda event: (send_prompt(), "break"))

root.mainloop()
